{{- if .Values.cassandra.install }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: cassandra-init-scripts
  namespace: {{ .Values.namespace }}
data:
  init-db.sh: |
    #!/bin/bash
    set -euo pipefail

    echo "→ Cassandra init-script starting…"

    CASS_HOST={{ .Values.cassandra.serviceName }}
    CASS_PORT={{ .Values.cassandra.port }}
    KEYSPACE={{ .Values.cassandra.keyspace }}
    CQLSH="cqlsh $CASS_HOST $CASS_PORT -u {{ .Values.cassandra.users.test.username }} -p {{ .Values.cassandra.users.test.password }}"

    DATASET="{{ .Values.dataset.mountPath }}"

    # 1) wait for Cassandra
    for i in {1..10}; do
      echo "exit" | $CQLSH &>/dev/null && break
      echo "Waiting for Cassandra… attempt $i/10"; sleep 2
    done
    echo "✔ Cassandra is ready."

    # 2) Apply each createScript + loadScript
    {{- $root := . }}
    {{- $imports := default (list) $root.Values.cassandra.testdb.import }}

    {{- if and (.Values.cassandra.testdb.create) (gt (len $imports) 0) }}
      {{- range $imp := $imports }}
    echo "→ creating schema for '{{ $imp.name }}'…"
    echo "{{ tpl $imp.createScript $root | replace "\n" " " | trim }}" | $CQLSH

    echo "→ loading data for '{{ $imp.name }}'…"
    echo "{{ tpl $imp.loadScript $root | replace "\n" " " | trim }}" | $CQLSH

      {{- end }}
    {{- end }}

    echo "→ Cassandra init-script finished."
{{- end }}
