apiVersion: v1
kind: ConfigMap
metadata:
  name: customer-generator-script
  namespace: {{ .Values.namespace }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-100"
data:
  generate_customers.py: |
    #!/usr/bin/env python3
    import csv
    import random
    import uuid
    import sys
    from datetime import datetime, timedelta
    from faker import Faker

    fake = Faker()

    def random_date(start, end):
        return start + timedelta(seconds=random.randint(0, int((end - start).total_seconds())))

    def generate_customers_csv(filename, num_records):
        header = [
            "CustomerId","CreateDate","FirstName","LastName","Email","PhoneNumber",
            "Address","City","Country","DateOfBirth","IsActive","CustomerType",
            "LastUpdateDate","Notes"
        ]
        customer_types = ['Individual','Business']
        start_date = datetime(2000,1,1)
        end_date = datetime.now()

        with open(filename, 'w', newline='') as f:
            writer = csv.writer(f)
            writer.writerow(header)
            for _ in range(num_records):
                cid = str(uuid.uuid4())
                cdate = random_date(start_date, end_date).strftime("%Y-%m-%d")
                fn = fake.first_name()
                ln = fake.last_name()
                email = f"{fn.lower()}.{ln.lower()}{random.randint(1,9999)}@example.com"
                phone = fake.phone_number()
                addr = fake.street_address()
                city = fake.city()
                country = fake.country()
                dob = fake.date_of_birth(minimum_age=18, maximum_age=90).strftime("%Y-%m-%d")
                active = random.choice(["true","false"])
                ctype = random.choice(customer_types)
                lud = random_date(start_date, end_date).strftime("%Y-%m-%dT%H:%M:%S")
                notes = fake.sentence(nb_words=6)

                writer.writerow([cid, cdate, fn, ln, email, phone,
                                 addr, city, country, dob,
                                 active, ctype, lud, notes])

    if __name__ == "__main__":
        if len(sys.argv) != 3:
            print("Usage: python generate_customers.py <output-file> <num-records>")
            sys.exit(1)
        out_file = sys.argv[1]
        count = int(sys.argv[2])
        generate_customers_csv(out_file, count)
