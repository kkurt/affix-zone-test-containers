{{- if .Values.kafka.install }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: {{ .Values.kafka.image }}
          ports:
            - name: kafka
              containerPort: {{ .Values.kafka.port | int }}
            - name: internal
              containerPort: 9093
            - name: controller
              containerPort: 9094
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KAFKA_CFG_PROCESS_ROLES
              value: controller,broker
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: CONTROLLER
            - name: KAFKA_CFG_LISTENERS
              value: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: PLAINTEXT://$(POD_IP):9092,EXTERNAL://localhost:9094
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
            - name: KAFKA_CFG_NODE_ID
              value: "0"
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: "0@localhost:9093"
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: PLAINTEXT
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-pvc
{{- end }}
