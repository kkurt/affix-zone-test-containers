apiVersion: batch/v1
kind: Job
metadata:
  name: download-extract-datasets
  namespace: {{ .Values.namespace }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-1"
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  template:
    spec:
      restartPolicy: OnFailure
      volumes:
        - name: datasets
          persistentVolumeClaim:
            claimName: dataset-pvc
      containers:
        - name: downloader
          image: alpine:3.18
          command: ["/bin/sh", "-c"]
          args:
            - |
              set -ex
              echo "Installing aria2..."
              apk add --no-cache aria2

              cd /data

              echo "Starting dataset downloads..."
              {{- range .Values.datasets.files }}
              {{- if .download }}
              echo "Downloading {{ .name }} from {{ .url }} ..."
              aria2c -x 8 -s 8 -d /data "{{ .url }}"
              {{- end }}
              {{- end }}

              echo "Download complete. Now extracting compressed files..."
              for file in $(find . -maxdepth 1 -type f); do
                if echo "$file" | grep -E '\.tar\.gz$' > /dev/null; then
                  echo "Extracting tar.gz file: $file ..."
                  tar -xzvf "$file"
                elif echo "$file" | grep -E '\.gz$' > /dev/null; then
                  # Exclude tar.gz files (they were handled above)
                  if ! echo "$file" | grep -E '\.tar\.gz$' > /dev/null; then
                    echo "Extracting gz file: $file ..."
                    gunzip -f "$file"
                  fi
                fi
              done

              echo "âœ… All datasets downloaded and extracted successfully."
              echo "Final file listing in /data:"
              ls -l /data
          volumeMounts:
            - name: datasets
              mountPath: /data
  backoffLimit: 0
  ttlSecondsAfterFinished: 1